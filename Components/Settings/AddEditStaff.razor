@using Microsoft.EntityFrameworkCore
@using AcademicYearCalendar.Data
@inject AppDbContext AppDbContext
@rendermode InteractiveServer
@inject IMessageService MessageService

<h3>اضافة/تعديل بيانات عضو هيئة التدريس</h3>



<FluentGrid>
    <FluentGridItem xs="12" sm="6">
        <EditForm Model="Staff" FormName="change-StudySubject" OnValidSubmit="OnValidSubmitAsync" method="post" novalidate>
            <DataAnnotationsValidator />
            <FluentValidationSummary class="text-danger" role="alert" />
            <FluentTextField Name="program.ProgramName" @bind-Value="Staff.StaffName" Required="true" Placeholder="ادخل اسم عضو هيئة التدريس" Label="اسم عضو هيئة التدريس" Style="width: 100%" />
            <FluentValidationMessage For="() => Staff.StaffName" class="text-danger" />
            <div style="display:flex">
                <FluentSpacer />
                <FluentButton Type="ButtonType.Submit" Appearance="Appearance.Accent" IconStart="@(new Icons.Regular.Size16.Save())" Style="width: 25%;">حفظ</FluentButton>
                <FluentSpacer />
                <FluentButton Type="ButtonType.Button" @onclick="ExitOnClick" Appearance="Appearance.Accent" IconStart="@(new MyIcons.Regular.Size16.Cancel())" Style="width: 25%;">رجوع</FluentButton>
                <FluentSpacer />
            </div>
        </EditForm>


    </FluentGridItem>
</FluentGrid>


@code {
    [Parameter]
    public Staff Staff { get; set; }


    [Parameter]
    public string Status { get; set; }

    [Parameter]
    public EventCallback OnDone { get; set; }

    protected override void OnInitialized()
    {
        if (Status == "Add")
        {
            Staff = new Staff();
        }
    }

    async Task ExitOnClick()
    {
        //AppDbContext.Entry(AcademicProgram).Reload();
        MessageService.ShowMessageBar(options =>
        {
            options.Intent = MessageIntent.Warning;
            options.Body = "لم يتم تعديل اي بيانات";
            options.Timeout = 3000;
            options.Section = "MESSAGES_TOP";
        });
        AppDbContext.ChangeTracker.Clear();
        await OnDone.InvokeAsync();
    }

    private async Task OnValidSubmitAsync()
    {

        if (Status == "Add")
        {
            Staff.Id = AppDbContext.GetNextResourceId();
            AppDbContext.Staff.Add(Staff);
        }
        if (Status == "Edit")
        {
            AppDbContext.Staff.Update(Staff);
        }

        AppDbContext.SaveChanges();

        await MessageService.ShowMessageBarAsync(options =>
        {
            options.Intent = MessageIntent.Success;
            options.Body = "تم حفظ البيانات بنجاح";
            options.Timeout = 3000;
            options.Section = "MESSAGES_TOP";
        });

        await OnDone.InvokeAsync();
    }
}
