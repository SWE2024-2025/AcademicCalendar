@page "/Settings/AcademicPrograms"
@using Microsoft.EntityFrameworkCore
@using AcademicYearCalendar.Data
@inject AppDbContext AppDbContext
@rendermode InteractiveServer

<h1>إدارة البرامج الدراسية</h1>
<hr />
<div style="height:50px">
    
</div>
@if (Status == "Add" || Status == "Edit")
{
    <AddEditAcademicProgram AcademicProgram="@selectedAcademicProgram" Status="@Status" OnDone="OnDone"></AddEditAcademicProgram>
}

@if (Status == "EditSubjects")
{
    <EditAcademicProgramSubjects AcademicProgram="@selectedAcademicProgram" Status="@Status" OnDone="OnDone"></EditAcademicProgramSubjects>
}


@if (Status == "List")
{
    <FluentButton Appearance="Appearance.Accent" @onclick="AddOnClick" IconStart="@(new Icons.Regular.Size16.Add())">اضافة برنامج دراسي</FluentButton>
    <FluentDataGrid Items="@programs" MultiLine="true" Pagination="@pagination">
        <PropertyColumn Property="@(p => p.ProgramName)" Title="اسم البرنامج الدراسي" />
        <TemplateColumn Title="المواد الدراسية">
            @foreach (var subject in context.StudySubjects)
            {
                <div>
                    @subject.SubjectName
                </div>
            }
        </TemplateColumn>
        <TemplateColumn Title="">
            <FluentButton Appearance="Appearance.Accent" @onclick="()=> EditOnClick(context)" IconStart="@(new Icons.Regular.Size16.Edit())">تعديل برنامج دراسي</FluentButton>
            <FluentButton Appearance="Appearance.Accent" @onclick="()=> EditSubjectsOnClick(context)" IconStart="@(new Icons.Regular.Size16.Edit())">تعديل المواد الدراسية</FluentButton>
        </TemplateColumn>
    </FluentDataGrid>
    <FluentPaginator State="@pagination" />
}

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 5 };
    private IQueryable<AcademicProgram> programs;
    private AcademicProgram selectedAcademicProgram;

    private string Status = "List";

    protected override void OnInitialized()
    {
        loadAcademicPrograms();
    }

    private void loadAcademicPrograms()
    {
        programs = AppDbContext.AcademicProgram
                                 .Include(p => p.StudySubjects);
    }
    void AddOnClick()
    {
        Status = "Add";
    }

    void EditOnClick(AcademicProgram program)
    {
        selectedAcademicProgram = program;
        Status = "Edit";
    }

    void EditSubjectsOnClick(AcademicProgram program)
    {
        selectedAcademicProgram = program;
        Status = "EditSubjects";
    }

    void OnDone()
    {
        loadAcademicPrograms();
        Status = "List";
    }

}
