@page "/Settings/StudySubjects"
@using Microsoft.EntityFrameworkCore
@using AcademicYearCalendar.Data
@inject AppDbContext AppDbContext
@rendermode InteractiveServer

<h1>إدارة المواد الدراسية</h1>
<hr />
<div style="height:50px">
</div>
@if (Status == "Add" || Status == "Edit")
{
    <AddEditStudySubject StudySubject="@selectedSubject" Status="@Status" OnDone="OnDone"></AddEditStudySubject>
}

@if (Status == "List")
{
    <FluentButton Appearance="Appearance.Accent" @onclick="AddOnClick" IconStart="@(new Icons.Regular.Size16.Add())">اضافة مادة دراسية</FluentButton>
    <FluentDataGrid Items="@subjects" MultiLine="true" Pagination="@pagination">
        <PropertyColumn Property="@(p => p.SubjectName)" Title="اسم المادة الدراسية" />
        <TemplateColumn Title="البرامج الدراسية">
            @foreach (var subject in context.AcademicPrograms)
            {
                <div>
                    @subject.ProgramName
                </div>
            }
        </TemplateColumn>
        <TemplateColumn Title="">
            <FluentButton Appearance="Appearance.Accent" @onclick="()=> EditOnClick(context)" IconStart="@(new Icons.Regular.Size16.Edit())">تعديل المادة الدراسية</FluentButton>            
        </TemplateColumn>
    </FluentDataGrid>
    <FluentPaginator State="@pagination" />
}

@code {
    PaginationState pagination = new PaginationState { ItemsPerPage = 5 };
    private IQueryable<StudySubject> subjects;
    private StudySubject selectedSubject;

    private string Status = "List";

    protected override void OnInitialized()
    {
        loadStudySubjects();
    }

    private void loadStudySubjects()
    {
        subjects = AppDbContext.StudySubject
                                 .Include(p => p.AcademicPrograms);
    }
    void AddOnClick()
    {
        Status = "Add";
    }

    void EditOnClick(StudySubject subject)
    {
        selectedSubject = subject;
        Status = "Edit";
    }

    void OnDone()
    {
        loadStudySubjects();
        Status = "List";
    }

}
